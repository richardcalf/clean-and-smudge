if you use the 'clean' and 'smudge' filter directly in your local config file, you will only be able to apply it to one secret
hint, to see your local config, from the command line...
$ git config --local -e (if already setup, you'll see your [filter "{filter_name}] with smudge and clean underneath

if you require many secrets to be switched out then make a 'smudge-scripts' folder and exempt it from check in by using .gitignore
name it:git-smudge-clean-filter.sh
put this bash code you see here inbetween the ===== inside your new shell script

===========================================================
#!/bin/bash

declare -A mapArr

mapArr["your literal database password would go here"]="{DATABASE_PASSWORD}"
mapArr["your literal salt value would go here"]="{private-salt}"

# mac users should use gsed instead of sed
sedcmd="sed"
if [[ "$1" == "clean" ]]; then
  for key in ${!mapArr[@]}; do
    sedcmd+=" -e \"s/${key}/${mapArr[${key}]}/g\""
  done  
elif [[ "$1" == "smudge" ]]; then
  for key in ${!mapArr[@]}; do
    sedcmd+=" -e \"s/${mapArr[${key}]}/${key}/g\""
  done  
else  
  echo "use smudge/clean as the first argument"
  exit 1
fi

eval $sedcmd
===========================================================

now edit your local config to execute that script
$ git config --local filter.{filter_name}.smudge "/c/sandbox/git/clean-smudge/smudge-scripts/git-smudge-clean-filter.sh smudge"
$ git config --local filter.{filter_name}.clean "/c/sandbox/git/clean-smudge/smudge-scripts/git-smudge-clean-filter.sh clean"

to view your changed, once again..

$ git config --local -e

